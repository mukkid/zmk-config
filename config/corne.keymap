/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <175>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc_combo {
            bindings = <&kp ESC>;
            key-positions = <1 10>;
        };

        win {
            bindings = <&kp LEFT_GUI>;
            key-positions = <25 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                &kp W  &kp E  &kp R    &kp T             &kp Y      &kp U          &kp I      &kp O    &kp P                        &none
&none  &hrm LEFT_CONTROL A  &kp S  &kp D  &kp F    &kp G             &kp H      &kp J          &kp K      &kp L    &hrm LEFT_CONTROL SEMICOLON  &none
&none  &kp Z                &kp X  &kp C  &kp V    &kp B             &kp N      &kp M          &kp COMMA  &kp DOT  &kp RET                      &none
                                   &mo 1  &kp TAB  &kp LEFT_SHIFT    &kp SPACE  &kp BACKSPACE  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none  &none     &kp UP    &none      &none        &none      &kp N7        &kp N8        &kp N9        &none         &none
&none  &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none        &none      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &none
&none  &none  &none     &none     &none      &none        &none      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none         &none
                        &none     &none      &kp LSHFT    &kp SPACE  &none         &mo 3
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL      &kp AT            &kp HASH              &kp DLLR               &kp PRCNT         &kp CARET  &kp AMPS        &kp ASTRK        &kp QUESTION  &kp BSLH          &none
&none  &kp GRAVE     &kp GREATER_THAN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS         &kp EQUAL  &kp LBKT        &kp RBKT         &kp STAR      &kp SINGLE_QUOTE  &none
&none  &kp LEFT_ALT  &kp LESS_THAN     &kp LBKT              &kp RBKT               &kp UNDERSCORE    &kp PLUS   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp SLASH     &kp ENTER         &none
                                       &none                 &none                  &kp LSHFT         &kp SPACE  &none           &none
            >;
        };

        layer_3 {
            bindings = <
&none  &none  &none       &none       &none       &none    &none  &none  &none  &none  &none  &none
&none  &none  &bt BT_PRV  &none       &bt BT_NXT  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none       &bt BT_CLR  &none       &none    &none  &none  &none  &none  &none  &none
                          &none       &none       &none    &none  &none  &none
            >;
        };
    };
};
